# Follow along _ 02. Fast ai

#hide
!pip install -Uqq fastbook
import fastbook
fastbook.setup_book()

from fastbook import *
from fastai.vision.widgets import *


# Creating dataset from Microsoft Azure Bing Image Search
#import os, os.environ -> environment variable used in other application (Azure) -> .get; specify in string as default
key = os.environ.get('AZURE_SEARCH_KEY', 'xxx')

# (fastbook.search_images_bing(key, term, min_sz=128, max_images=150))
doc(search_images_bing)

#seach_images_bing with input; 
#search_images_bing.attrgot (Fast.ai documentation -> CREATES List of items; in this case ims; with attribute (contentUrl in bing search) for all items))
#results is a list of links / metadata
results = search_images_bing(key, 'grizzly bear')
ims = results.attrgot('contentUrl')
len(ims)


#hide - just one example ; will have to rerun results.attrgot
ims = ['http://3.bp.blogspot.com/-S1scRCkI3vY/UHzV2kucsPI/AAAAAAAAA-k/YQ5UzHEm9Ss/s1600/Grizzly%2BBear%2BWildlife.jpg']
dest = 'images/grizzly.jpg'
# > download_url(['http://example.com/file.dat'], path='data')
download_url(ims[0], dest)

# (This just tests to see if data was successfully retrieved)
im = Image.open(dest)
im.to_thumb(128,128)



# create list of bear types
# Path (from pathlib import Path; creates directory 'bears'
bear_types = 'grizzly','black','teddy'
path = Path('bears')



if not path.exists():
    path.mkdir()
    for o in bear_types:
        dest = (path/o)
        dest.mkdir(exist_ok=True)
        results = search_images_bing(key, f'{o} bear')
        download_images(dest, urls=results.attrgot('contentUrl'))
